name: Automated Testing Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  php-tests:
    name: PHP Unit & Integration Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, xml, ctype, json, tokenizer, curl
        
    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress --no-dev
      
    - name: Run PHP Test Suite
      run: |
        mkdir -p tests/results
        # テスト用の設定ファイルを作成
        echo '{}' > api_keys.json
        php tests/run_all_tests.php || true
        
    - name: Upload PHP Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: php-test-results
        path: tests/results/
        
  e2e-tests:
    name: E2E Quick Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install E2E Test Dependencies
      run: |
        cd tests/e2e
        pip install -r requirements.txt
        
    - name: Start PHP Server
      run: |
        php -S localhost:8000 &
        sleep 3
        
    - name: Run E2E Quick Tests
      run: |
        cd tests/e2e
        mkdir -p logs
        python3 run_quick_tests.py || true
        
    - name: Upload E2E Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: e2e-test-results
        path: tests/e2e/logs/
        
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Security Analysis
      run: |
        # Basic security checks
        echo "Running security checks..."
        
        # Check for hardcoded API keys (excluding test files and placeholders)
        if grep -r "sk-[a-zA-Z0-9]" \
          --include="*.php" \
          --include="*.js" \
          --exclude="api_keys.json" \
          --exclude="*Test.php" \
          --exclude="*test*.php" \
          --exclude="*test*.js" \
          . | grep -v "placeholder\|sk-\.\.\.\|sk-ant-\.\.\." | grep -v "tests/"; then
          echo "⚠️ Potential hardcoded API keys found"
          exit 1
        fi
        
        # Check for SQL injection patterns (excluding test files)
        if grep -r "SELECT.*\$\|INSERT.*\$\|UPDATE.*\$\|DELETE.*\$" \
          --include="*.php" \
          --exclude="*Test.php" \
          --exclude="*test*.php" \
          . | grep -v "tests/"; then
          echo "⚠️ Potential SQL injection patterns found"
          exit 1
        fi
        
        echo "✅ Basic security checks passed"
        
  comprehensive-test:
    name: Comprehensive Test Suite
    runs-on: ubuntu-latest
    needs: [php-tests, e2e-tests]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Dependencies
      run: |
        composer install --prefer-dist --no-progress --no-dev
        cd tests/e2e
        pip install -r requirements.txt
        
    - name: Run Comprehensive Test Suite
      run: |
        chmod +x tests/run_test_suite.sh
        tests/run_test_suite.sh
        
    - name: Upload Comprehensive Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: comprehensive-test-results
        path: tests/results/