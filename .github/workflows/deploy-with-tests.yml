name: Deploy with Tests

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  quick-tests:
    name: Quick Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        
    - name: Basic PHP Check
      run: |
        php -v
        php -l api.php
        php -l config.php
        
    - name: Security Check
      run: |
        echo "Checking for exposed secrets..."
        # Check for hardcoded API keys (excluding test files and placeholders)
        if grep -r "sk-[a-zA-Z0-9]" \
          --include="*.php" \
          --include="*.js" \
          --exclude="api_keys.json" \
          --exclude="*Test.php" \
          --exclude="*test*.php" \
          --exclude="*test*.js" \
          . | grep -v "placeholder\|sk-\.\.\.\|sk-ant-\.\.\." | grep -v "tests/"; then
          echo "‚ö†Ô∏è Potential hardcoded API keys found"
          exit 1
        fi
        echo "‚úÖ No exposed secrets found"

  deploy:
    name: Deploy to Production
    needs: quick-tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy files
      env:
        SSHPASS: ${{ secrets.SFTP_PASSWORD }}
      run: |
        # Install sshpass for password authentication
        sudo apt-get update
        sudo apt-get install -y sshpass rsync
        
        # Deploy using rsync with exclusions
        sshpass -e rsync -avz --delete \
          --exclude='.git/' \
          --exclude='.github/' \
          --exclude='logs/' \
          --exclude='tests/' \
          --exclude='docs/' \
          --exclude='*.log' \
          --exclude='.env*' \
          --exclude='README.md' \
          --exclude='SETUP.md' \
          --exclude='SECURITY_INCIDENT_REPORT.md' \
          --exclude='test-automation.yml' \
          --exclude='.DS_Store' \
          --exclude='*.tmp' \
          --exclude='*.bak' \
          --exclude='*.pem' \
          --exclude='*.key' \
          --exclude='roic/' \
          -e "ssh -o StrictHostKeyChecking=no -o ConnectTimeout=5" \
          ./ ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_REMOTE_PATH }}
        
    - name: Deployment notification
      run: |
        echo "‚úÖ „Éá„Éó„É≠„Ç§„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„ÅüÔºÅ"
        echo "üåê „Çµ„Ç§„ÉàURL: https://mokumoku.sakura.ne.jp/persona/"